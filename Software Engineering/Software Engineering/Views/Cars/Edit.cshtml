@model Software_Engineering.Models.Car

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Edit</h2>

@using (Html.BeginForm("Edit","Cars",FormMethod.Post,new {enctype="multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="row">
        <div class="col-md-6">
            <!-- general form elements -->
            <div class="box box-primary">
                <div class="box-header with-border">
                    <h3 class="box-title">Create Car Record</h3>
                </div>
                <!-- /.box-header -->
                <div class="box-body">
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="form-group">
                        @Html.LabelFor(model => model.Model, htmlAttributes: new { @class = "control-label col-md-2" })
                        @Html.EditorFor(model => model.Model, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Model, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Make, htmlAttributes: new { @class = "control-label col-md-2" })
                        @Html.EditorFor(model => model.Make, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Make, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Mileage, htmlAttributes: new { @class = "control-label col-md-2" })
                        @Html.EditorFor(model => model.Mileage, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Mileage, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Year, htmlAttributes: new { @class = "control-label col-md-2" })
                        @Html.EditorFor(model => model.Year, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Year, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.CC, htmlAttributes: new { @class = "control-label col-md-2" })
                        @Html.EditorFor(model => model.CC, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.CC, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.buyingPrice, htmlAttributes: new { @class = "control-label col-md-2" })
                        @Html.EditorFor(model => model.buyingPrice, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.buyingPrice, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.sellingPrice, htmlAttributes: new { @class = "control-label col-md-2" })
                        @Html.EditorFor(model => model.sellingPrice, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.sellingPrice, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.maintainanceCost, htmlAttributes: new { @class = "control-label col-md-2" })
                        @Html.EditorFor(model => model.maintainanceCost, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.maintainanceCost, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Condition, htmlAttributes: new { @class = "control-label col-md-2" })
                        @Html.EditorFor(model => model.Condition, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Condition, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.ownerName, htmlAttributes: new { @class = "control-label col-md-2" })
                        @Html.EditorFor(model => model.ownerName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ownerName, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.purchasedDate, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="input-group date">
                            <div class="input-group-addon">
                                <i class="fa fa-calendar"></i>
                            </div>
                            @Html.EditorFor(model => model.purchasedDate, new { htmlAttributes = new { @id = "datepicker", @class = "form-control" } })
                        </div>
                        @Html.ValidationMessageFor(model => model.purchasedDate, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.soldDate, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="input-group date">
                            <div class="input-group-addon">
                                <i class="fa fa-calendar"></i>
                            </div>
                            @Html.EditorFor(model => model.soldDate, new { htmlAttributes = new {@id="datepicker2", @class = "form-control" } })
                            </div>
                            @Html.ValidationMessageFor(model => model.soldDate, "", new { @class = "text-danger" })
                        </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.registerationNo, htmlAttributes: new { @class = "control-label col-md-2" })
                        @Html.EditorFor(model => model.registerationNo, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.registerationNo, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        <p class="control-label col-md-2"><b>Customer</b></p>
                        @Html.DropDownList("customerId", null, "", htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.customerId, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        <p class="control-label col-md-2"><b>Tracker</b></p>
                        @Html.DropDownList("trackerId", null, "", htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.trackerId, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        <p class="control-label col-md-2"><b>Insurance</b></p>
                        @Html.DropDownList("insuranceId", null, "", htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.insuranceId, "", new { @class = "text-danger" })
                    </div>
                    <input type="hidden" id="modified1" name="modified1" value="false"/>
                    <input type="hidden" id="modified2" name="modified2" value="false" />
                    <input type="hidden" id="modified3" name="modified3" value="false" />
                    <input type="hidden" id="modified4" name="modified4" value="false" />
                    <div class="form-group">
                        @Html.LabelFor(model => model.Image, htmlAttributes: new { @class = "control-label col-md-2" })
                        @{
                            var base64 = "";
                            var imgsrc = "https://upload.wikimedia.org/wikipedia/commons/thumb/6/6c/No_image_3x4.svg/1280px-No_image_3x4.svg.png";
                            if (Model.Image != null)
                            {
                                base64 = Convert.ToBase64String(Model.Image);
                                imgsrc = string.Format("data:image/gif;base64,{0}", base64);
                                @:<span class="close cursor" onclick="closeModal(1); this.style.display = 'none';" style="color:black; font-size:40px; top:60px; right:100px;">&times;</span>
                                                                
                            }
                            @: <img src="@imgsrc" style="width:20%; height:20%;"id="1" />
                        }
                        <input type="file" id="image1" name="image1" onclick="closeModel(1)" />
                        
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Image2, htmlAttributes: new { @class = "control-label col-md-2" })
                        @{
                            base64 = "";
                            imgsrc = "https://upload.wikimedia.org/wikipedia/commons/thumb/6/6c/No_image_3x4.svg/1280px-No_image_3x4.svg.png";
                            if (Model.Image2 != null)
                            {
                                base64 = Convert.ToBase64String(Model.Image2);
                                imgsrc = string.Format("data:image/gif;base64,{0}", base64);
                                @:<span class="close cursor" onclick="closeModal(2); this.style.display = 'none';" style="color:black; font-size:40px; top:60px; right:100px;">&times;</span>
                            }
                            @: <img src="@imgsrc" style="width:20%; height:20%;" id="2" />
                        }
                        <input type="file" id="image2" name="image2" onclick="closeModel(2)"/>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Image3, htmlAttributes: new { @class = "control-label col-md-2" })
                        @{
                            base64 = "";
                            imgsrc = "https://upload.wikimedia.org/wikipedia/commons/thumb/6/6c/No_image_3x4.svg/1280px-No_image_3x4.svg.png";
                            if (Model.Image3 != null)
                            {
                                base64 = Convert.ToBase64String(Model.Image3);
                                imgsrc = string.Format("data:image/gif;base64,{0}", base64);
                                @:<span class="close cursor" onclick="closeModal(3); this.style.display = 'none';" style="color:black; font-size:40px; top:60px; right:100px;">&times;</span>
                            }
                            @: <img src="@imgsrc" style="width:20%; height:20%;" id="3" />
                        }
                        <input type="file" id="image3" name="image3" onclick="closeModel(3)"/>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Image4, htmlAttributes: new { @class = "control-label col-md-2" })
                        @{
                            base64 = "";
                            imgsrc = "https://upload.wikimedia.org/wikipedia/commons/thumb/6/6c/No_image_3x4.svg/1280px-No_image_3x4.svg.png";
                            if (Model.Image4 != null)
                            {
                                base64 = Convert.ToBase64String(Model.Image4);
                                imgsrc = string.Format("data:image/gif;base64,{0}", base64);
                                @:<span class="close cursor" onclick="closeModal(4); this.style.display = 'none';" style="color:black; font-size:40px; top:60px; right:100px;">&times;</span>
                            }
                            @: <img src="@imgsrc" style="width:20%; height:20%;" id="4"/>
                        }
                        <input type="file" id="image4" name="image4" onclick="closeModel(4)"/>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Imported, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="checkbox">
                            @Html.EditorFor(model => model.Imported)
                            @Html.ValidationMessageFor(model => model.Imported, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-6">
                            <input type="submit" value="Save" class="btn btn-primary" />
                        </div>
                    </div>

                </div>
            </div>
        </div>
    </div>
}
<script>
    function closeModal(id) {
        if(confirm("Do you want to delete the image")==true){
            if (id == 1) {
                modified1.value = "true";
            }
            if (id == 2) {
                modified2.value = "true";
            }
            if (id == 3) {
                modified3.value = "true";
            }
            if (id == 4) {
                modified4.value = "true";
            }
        }
        document.getElementById(id).style.display = "none";
        
    }
    function closeModel(id) {
        document.getElementById(id).style.display = "none";
    }
</script>
<div>
    @Html.ActionLink("Back to List", "Index")
</div>
